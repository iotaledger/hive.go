package marshalutil

import (
	"fmt"
	"testing"
)

func Test(t *testing.T) {
	util := New(16)
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))
	util.WriteBytes(make([]byte, Uint64Size))
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))
	util.WriteInt64(-12)
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))
	util.WriteUint64(38)
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))
	util.WriteUint64(38)
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))

	fmt.Println(util.ReadBytes(Uint64Size))
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))
	fmt.Println(util.ReadInt64())
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))
	fmt.Println(util.ReadUint64())
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))
	fmt.Println(util.ReadUint64())
	fmt.Println("----")
	fmt.Println(util.writeOffset)
	fmt.Println(util.readOffset)
	fmt.Println(util.size)
	fmt.Println(len(util.bytes))

	fmt.Println(util)
}

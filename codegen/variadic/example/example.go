// Code generated by go generate; DO NOT EDIT.
package example

// PanicOnErr panics if err is not nil.
func PanicOnErr(err error) {
	if err != nil {
		panic(err)
	}
}

// PanicOnErr1 panics if err is not nil and otherwise returns the remaining 1 generic parameters.
func PanicOnErr1[T1 any](arg1 T1, err error) T1 {
	if err != nil {
		panic(err)
	}

	return arg1
}

// PanicOnErr2 panics if err is not nil and otherwise returns the remaining 2 generic parameters.
func PanicOnErr2[T1, T2 any](arg1 T1, arg2 T2, err error) (T1, T2) {
	if err != nil {
		panic(err)
	}

	return arg1, arg2
}

// PanicOnErr3 panics if err is not nil and otherwise returns the remaining 3 generic parameters.
func PanicOnErr3[T1, T2, T3 any](arg1 T1, arg2 T2, arg3 T3, err error) (T1, T2, T3) {
	if err != nil {
		panic(err)
	}

	return arg1, arg2, arg3
}

// PanicOnErr4 panics if err is not nil and otherwise returns the remaining 4 generic parameters.
func PanicOnErr4[T1, T2, T3, T4 any](arg1 T1, arg2 T2, arg3 T3, arg4 T4, err error) (T1, T2, T3, T4) {
	if err != nil {
		panic(err)
	}

	return arg1, arg2, arg3, arg4
}

// PanicOnErr5 panics if err is not nil and otherwise returns the remaining 5 generic parameters.
func PanicOnErr5[T1, T2, T3, T4, T5 any](arg1 T1, arg2 T2, arg3 T3, arg4 T4, arg5 T5, err error) (T1, T2, T3, T4, T5) {
	if err != nil {
		panic(err)
	}

	return arg1, arg2, arg3, arg4, arg5
}

// PanicOnErr6 panics if err is not nil and otherwise returns the remaining 6 generic parameters.
func PanicOnErr6[T1, T2, T3, T4, T5, T6 any](arg1 T1, arg2 T2, arg3 T3, arg4 T4, arg5 T5, arg6 T6, err error) (T1, T2, T3, T4, T5, T6) {
	if err != nil {
		panic(err)
	}

	return arg1, arg2, arg3, arg4, arg5, arg6
}

// PanicOnErr7 panics if err is not nil and otherwise returns the remaining 7 generic parameters.
func PanicOnErr7[T1, T2, T3, T4, T5, T6, T7 any](arg1 T1, arg2 T2, arg3 T3, arg4 T4, arg5 T5, arg6 T6, arg7 T7, err error) (T1, T2, T3, T4, T5, T6, T7) {
	if err != nil {
		panic(err)
	}

	return arg1, arg2, arg3, arg4, arg5, arg6, arg7
}

// PanicOnErr8 panics if err is not nil and otherwise returns the remaining 8 generic parameters.
func PanicOnErr8[T1, T2, T3, T4, T5, T6, T7, T8 any](arg1 T1, arg2 T2, arg3 T3, arg4 T4, arg5 T5, arg6 T6, arg7 T7, arg8 T8, err error) (T1, T2, T3, T4, T5, T6, T7, T8) {
	if err != nil {
		panic(err)
	}

	return arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8
}

// PanicOnErr9 panics if err is not nil and otherwise returns the remaining 9 generic parameters.
func PanicOnErr9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](arg1 T1, arg2 T2, arg3 T3, arg4 T4, arg5 T5, arg6 T6, arg7 T7, arg8 T8, arg9 T9, err error) (T1, T2, T3, T4, T5, T6, T7, T8, T9) {
	if err != nil {
		panic(err)
	}

	return arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9
}

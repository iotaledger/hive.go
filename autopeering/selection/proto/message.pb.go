// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autopeering/selection/proto/message.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	proto1 "github.com/iotaledger/hive.go/autopeering/salt/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PeeringRequest struct {
	// unix time
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// salt of the requester
	Salt                 *proto1.Salt `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PeeringRequest) Reset()         { *m = PeeringRequest{} }
func (m *PeeringRequest) String() string { return proto.CompactTextString(m) }
func (*PeeringRequest) ProtoMessage()    {}
func (*PeeringRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_948b47cfa6213295, []int{0}
}

func (m *PeeringRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeeringRequest.Unmarshal(m, b)
}
func (m *PeeringRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeeringRequest.Marshal(b, m, deterministic)
}
func (m *PeeringRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeeringRequest.Merge(m, src)
}
func (m *PeeringRequest) XXX_Size() int {
	return xxx_messageInfo_PeeringRequest.Size(m)
}
func (m *PeeringRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeeringRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeeringRequest proto.InternalMessageInfo

func (m *PeeringRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PeeringRequest) GetSalt() *proto1.Salt {
	if m != nil {
		return m.Salt
	}
	return nil
}

type PeeringResponse struct {
	// hash of the corresponding request
	ReqHash []byte `protobuf:"bytes,1,opt,name=req_hash,json=reqHash,proto3" json:"req_hash,omitempty"`
	// response of a peering request
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeeringResponse) Reset()         { *m = PeeringResponse{} }
func (m *PeeringResponse) String() string { return proto.CompactTextString(m) }
func (*PeeringResponse) ProtoMessage()    {}
func (*PeeringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_948b47cfa6213295, []int{1}
}

func (m *PeeringResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeeringResponse.Unmarshal(m, b)
}
func (m *PeeringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeeringResponse.Marshal(b, m, deterministic)
}
func (m *PeeringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeeringResponse.Merge(m, src)
}
func (m *PeeringResponse) XXX_Size() int {
	return xxx_messageInfo_PeeringResponse.Size(m)
}
func (m *PeeringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeeringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeeringResponse proto.InternalMessageInfo

func (m *PeeringResponse) GetReqHash() []byte {
	if m != nil {
		return m.ReqHash
	}
	return nil
}

func (m *PeeringResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type PeeringDrop struct {
	// unix time
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeeringDrop) Reset()         { *m = PeeringDrop{} }
func (m *PeeringDrop) String() string { return proto.CompactTextString(m) }
func (*PeeringDrop) ProtoMessage()    {}
func (*PeeringDrop) Descriptor() ([]byte, []int) {
	return fileDescriptor_948b47cfa6213295, []int{2}
}

func (m *PeeringDrop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeeringDrop.Unmarshal(m, b)
}
func (m *PeeringDrop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeeringDrop.Marshal(b, m, deterministic)
}
func (m *PeeringDrop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeeringDrop.Merge(m, src)
}
func (m *PeeringDrop) XXX_Size() int {
	return xxx_messageInfo_PeeringDrop.Size(m)
}
func (m *PeeringDrop) XXX_DiscardUnknown() {
	xxx_messageInfo_PeeringDrop.DiscardUnknown(m)
}

var xxx_messageInfo_PeeringDrop proto.InternalMessageInfo

func (m *PeeringDrop) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*PeeringRequest)(nil), "proto.PeeringRequest")
	proto.RegisterType((*PeeringResponse)(nil), "proto.PeeringResponse")
	proto.RegisterType((*PeeringDrop)(nil), "proto.PeeringDrop")
}

func init() {
	proto.RegisterFile("autopeering/selection/proto/message.proto", fileDescriptor_948b47cfa6213295)
}

var fileDescriptor_948b47cfa6213295 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x3f, 0x4b, 0x04, 0x31,
	0x10, 0x47, 0x39, 0xff, 0x9c, 0xe7, 0xac, 0x28, 0xa4, 0x90, 0x53, 0x04, 0x75, 0x2b, 0x45, 0xd8,
	0x80, 0x56, 0x62, 0x27, 0x57, 0xd8, 0x29, 0xb1, 0xb3, 0x91, 0xdc, 0x39, 0x64, 0x03, 0xbb, 0x3b,
	0xb9, 0xcc, 0xac, 0x9f, 0xdf, 0x5c, 0x76, 0x51, 0x6c, 0xae, 0x9a, 0xbc, 0x99, 0xdf, 0x3c, 0xc2,
	0xc0, 0xad, 0xed, 0x85, 0x02, 0x62, 0xf4, 0x9d, 0xd3, 0x8c, 0x0d, 0xae, 0xc4, 0x53, 0xa7, 0x43,
	0x24, 0x21, 0xdd, 0x22, 0xb3, 0x75, 0x58, 0x65, 0x52, 0xfb, 0xb9, 0x9c, 0x5f, 0xff, 0xdb, 0xb0,
	0x8d, 0x8c, 0xe1, 0xcd, 0x73, 0x48, 0x96, 0xaf, 0x70, 0xfc, 0x36, 0x04, 0x0c, 0xae, 0x7b, 0x64,
	0x51, 0x17, 0x70, 0x28, 0x3e, 0xe9, 0xc4, 0xb6, 0x61, 0x3e, 0xb9, 0x9a, 0xdc, 0xec, 0x9a, 0xbf,
	0x86, 0xba, 0x84, 0xbd, 0xcd, 0xf6, 0x7c, 0x27, 0x0d, 0x8a, 0xfb, 0x62, 0xb0, 0x54, 0xef, 0xa9,
	0x65, 0xf2, 0xa0, 0x5c, 0xc0, 0xc9, 0xaf, 0x90, 0x03, 0x75, 0x8c, 0xea, 0x0c, 0x66, 0x11, 0xd7,
	0x9f, 0xb5, 0xe5, 0x3a, 0x0b, 0x8f, 0xcc, 0x41, 0xe2, 0x97, 0x84, 0xea, 0x14, 0xa6, 0xc9, 0x2b,
	0x3d, 0x67, 0xe1, 0xcc, 0x8c, 0x54, 0xde, 0x41, 0x31, 0x5a, 0x16, 0x91, 0xc2, 0xf6, 0x3f, 0x3d,
	0x3f, 0x7d, 0x3c, 0x3a, 0x2f, 0x75, 0xbf, 0xac, 0x56, 0xd4, 0x6a, 0x4f, 0x62, 0x1b, 0xfc, 0x72,
	0x18, 0x75, 0xed, 0xbf, 0xb1, 0x72, 0xa4, 0xb7, 0x1c, 0x6e, 0x39, 0xcd, 0xe5, 0xe1, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x82, 0x77, 0x3a, 0xcc, 0x5e, 0x01, 0x00, 0x00,
}
